{"version":3,"sources":["webpack:///./src/components/contactForm.js","webpack:///./src/pages/contact.js"],"names":["HiddenInput","styled","input","ContactForm","className","useState","status","setStatus","onSubmit","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","send","process","for","type","name","Main","main","props","theme","wrapper","paddingY","paddingX","StyledContactForm","colors","highlight","light","ContactPage","title"],"mappings":"6KAGMA,EAAcC,IAAOC,MAAV,2EAAGD,CAAH,2DAqDFE,EA9CK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACTC,qBAArBC,EAD8B,KACtBC,EADsB,KAuBrC,OACE,0BACEC,SArBJ,SAAoBC,GAClBA,EAAGC,iBACH,IAAMC,EAAOF,EAAGG,OACVC,EAAO,IAAIC,SAASH,GACpBI,EAAM,IAAIC,eAChBD,EAAIE,KAAKN,EAAKO,OAAQP,EAAKQ,QAC3BJ,EAAIK,iBAAiB,SAAU,oBAC/BL,EAAIM,mBAAqB,WACnBN,EAAIO,aAAeN,eAAeO,OACnB,MAAfR,EAAIT,QACNK,EAAKa,QACLjB,EAAU,YAEVA,EAAU,WAGdQ,EAAIU,KAAKZ,IAMPM,OAxBWO,gCAyBXR,OAAO,OACPd,UAAS,IAAKA,GAAa,KAE3B,2BAAOuB,IAAI,QAAX,OACE,2BAAOC,KAAK,OAAOC,KAAK,UAE1B,2BAAOF,IAAI,SAAX,QACE,2BAAOC,KAAK,QAAQC,KAAK,WAE3B,2BAAOF,IAAI,WAAX,UACE,8BAAUC,KAAK,OAAOC,KAAK,aAE7B,kBAAC7B,EAAD,CAAa4B,KAAK,OAAOC,KAAK,YAClB,YAAXvB,EAAuB,sCAAiB,0CAC7B,UAAXA,GAAsB,2DC5CvBwB,EAAO7B,IAAO8B,KAAV,gEAAG9B,CAAH,wGAMG,SAAA+B,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,YAAY,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,QAAQE,YAG7EC,EAAoBpC,YAAOE,GAAV,6EAAGF,CAAH,6UAMD,SAAA+B,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,YAIlB,SAAAH,GAAK,OAAIA,EAAMC,MAAMK,OAAOC,aAMrC,SAAAP,GAAK,OAAIA,EAAMC,MAAMK,OAAOC,aAGvC,SAAAP,GAAK,OAAIA,EAAMC,MAAMK,OAAOE,SAwB1BC,UAhBK,WAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,aACX,kBAAC,IAAD,MACA,kBAACZ,EAAD,KACE,wDACA,6BACA,gHACA,iDACA,kBAACO,EAAD","file":"component---src-pages-contact-js-2dc06ed9ec36cd6157ac.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport styled from 'styled-components'\r\n\r\nconst HiddenInput = styled.input`\r\n  height: 0;\r\n  position: absolute;\r\n  visibility: hidden;\r\n  width: 0;\r\n`\r\n\r\nconst ContactForm = ({ className }) => {\r\n  const [status, setStatus] = useState()\r\n  const action = process.env.GATSBY_FORMSPREE_ACTION\r\n\r\n  function submitForm(ev) {\r\n    ev.preventDefault()\r\n    const form = ev.target\r\n    const data = new FormData(form)\r\n    const xhr = new XMLHttpRequest()\r\n    xhr.open(form.method, form.action)\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\")\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== XMLHttpRequest.DONE) return\r\n      if (xhr.status === 200) {\r\n        form.reset()\r\n        setStatus(\"SUCCESS\")\r\n      } else {\r\n        setStatus(\"ERROR\")\r\n      }\r\n    }\r\n    xhr.send(data)\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={submitForm}\r\n      action={action}\r\n      method=\"POST\"\r\n      className={`${className || ''}`}\r\n    >\r\n      <label for=\"name\">Name\r\n        <input type=\"name\" name=\"name\" />\r\n      </label>\r\n      <label for=\"email\">Email\r\n        <input type=\"email\" name=\"email\" />\r\n      </label>\r\n      <label for=\"message\">Message\r\n        <textarea type=\"text\" name=\"message\" />\r\n      </label>\r\n      <HiddenInput type=\"text\" name=\"_gotcha\"/>\r\n      {status === \"SUCCESS\" ? <p>Thanks!</p> : <button>Submit</button>}\r\n      {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/layout\"\nimport PostsList from \"../components/posts\"\nimport ContactForm from \"../components/contactForm\"\n\nconst Main = styled.main`\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  max-height: 100vh;\n  overflow-y: auto;\n  padding: ${props => props.theme.wrapper.paddingY} ${props => props.theme.wrapper.paddingX};\n`\n\nconst StyledContactForm = styled(ContactForm)`\n  display: flex;\n  flex-direction: column;\n  label {\n    display: flex;\n    flex-direction: column;\n    padding-bottom: ${props => props.theme.wrapper.paddingY};\n    input,\n    textarea {\n      border: none;\n      border-bottom: 1px solid ${props => props.theme.colors.highlight};\n      padding: .25em .5em;\n    }\n  }\n  button {\n    align-self: flex-start;\n    background-color: ${props => props.theme.colors.highlight};\n    border: none;\n    border-radius: 1em;\n    color: ${props => props.theme.colors.light};\n    cursor: pointer;\n    flex: 0 0 auto;\n    padding: .25em 1em;\n    text-align: center;\n  }\n`\n\nconst ContactPage = () => {\n  return (\n    <Layout>\n      <SEO title=\"Services\" />\n      <PostsList />\n      <Main>\n        <h1>Work With @Monkishtypist</h1>\n        <hr/>\n        <p>Looking for a Systems Architect or full-stack web engineer for your next project?</p>\n        <p>Send me a message.</p>\n        <StyledContactForm />\n      </Main>\n    </Layout>\n  )\n}\n\nexport default ContactPage\n"],"sourceRoot":""}